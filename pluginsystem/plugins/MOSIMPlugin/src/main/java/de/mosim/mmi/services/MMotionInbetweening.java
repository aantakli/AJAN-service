/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package de.mosim.mmi.services;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2023-06-29")
public class MMotionInbetweening {

  public interface Iface extends MMIServiceBase.Iface {

    public java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues> Blend(de.mosim.mmi.avatar.MAvatarPostureValues start, de.mosim.mmi.avatar.MAvatarPostureValues target, double duration) throws org.apache.thrift.TException;

  }

  public interface AsyncIface extends MMIServiceBase .AsyncIface {

    public void Blend(de.mosim.mmi.avatar.MAvatarPostureValues start, de.mosim.mmi.avatar.MAvatarPostureValues target, double duration, org.apache.thrift.async.AsyncMethodCallback<java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues>> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends MMIServiceBase.Client implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues> Blend(de.mosim.mmi.avatar.MAvatarPostureValues start, de.mosim.mmi.avatar.MAvatarPostureValues target, double duration) throws org.apache.thrift.TException
    {
      send_Blend(start, target, duration);
      return recv_Blend();
    }

    public void send_Blend(de.mosim.mmi.avatar.MAvatarPostureValues start, de.mosim.mmi.avatar.MAvatarPostureValues target, double duration) throws org.apache.thrift.TException
    {
      Blend_args args = new Blend_args();
      args.setStart(start);
      args.setTarget(target);
      args.setDuration(duration);
      sendBase("Blend", args);
    }

    public java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues> recv_Blend() throws org.apache.thrift.TException
    {
      Blend_result result = new Blend_result();
      receiveBase(result, "Blend");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "Blend failed: unknown result");
    }

  }
  public static class AsyncClient extends MMIServiceBase.AsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void Blend(de.mosim.mmi.avatar.MAvatarPostureValues start, de.mosim.mmi.avatar.MAvatarPostureValues target, double duration, org.apache.thrift.async.AsyncMethodCallback<java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      Blend_call method_call = new Blend_call(start, target, duration, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class Blend_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues>> {
      private de.mosim.mmi.avatar.MAvatarPostureValues start;
      private de.mosim.mmi.avatar.MAvatarPostureValues target;
      private double duration;
      public Blend_call(de.mosim.mmi.avatar.MAvatarPostureValues start, de.mosim.mmi.avatar.MAvatarPostureValues target, double duration, org.apache.thrift.async.AsyncMethodCallback<java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.start = start;
        this.target = target;
        this.duration = duration;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("Blend", org.apache.thrift.protocol.TMessageType.CALL, 0));
        Blend_args args = new Blend_args();
        args.setStart(start);
        args.setTarget(target);
        args.setDuration(duration);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_Blend();
      }
    }

  }

  public static class Processor<I extends Iface> extends MMIServiceBase.Processor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("Blend", new Blend());
      return processMap;
    }

    public static class Blend<I extends Iface> extends org.apache.thrift.ProcessFunction<I, Blend_args> {
      public Blend() {
        super("Blend");
      }

      public Blend_args getEmptyArgsInstance() {
        return new Blend_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public Blend_result getResult(I iface, Blend_args args) throws org.apache.thrift.TException {
        Blend_result result = new Blend_result();
        result.success = iface.Blend(args.start, args.target, args.duration);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends MMIServiceBase.AsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("Blend", new Blend());
      return processMap;
    }

    public static class Blend<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, Blend_args, java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues>> {
      public Blend() {
        super("Blend");
      }

      public Blend_args getEmptyArgsInstance() {
        return new Blend_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues>>() { 
          public void onComplete(java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues> o) {
            Blend_result result = new Blend_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            Blend_result result = new Blend_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, Blend_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues>> resultHandler) throws org.apache.thrift.TException {
        iface.Blend(args.start, args.target, args.duration,resultHandler);
      }
    }

  }

  public static class Blend_args implements org.apache.thrift.TBase<Blend_args, Blend_args._Fields>, java.io.Serializable, Cloneable, Comparable<Blend_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Blend_args");

    private static final org.apache.thrift.protocol.TField START_FIELD_DESC = new org.apache.thrift.protocol.TField("start", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField TARGET_FIELD_DESC = new org.apache.thrift.protocol.TField("target", org.apache.thrift.protocol.TType.STRUCT, (short)2);
    private static final org.apache.thrift.protocol.TField DURATION_FIELD_DESC = new org.apache.thrift.protocol.TField("duration", org.apache.thrift.protocol.TType.DOUBLE, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new Blend_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new Blend_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues start; // required
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues target; // required
    public double duration; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      START((short)1, "start"),
      TARGET((short)2, "target"),
      DURATION((short)3, "duration");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // START
            return START;
          case 2: // TARGET
            return TARGET;
          case 3: // DURATION
            return DURATION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __DURATION_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.START, new org.apache.thrift.meta_data.FieldMetaData("start", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.avatar.MAvatarPostureValues.class)));
      tmpMap.put(_Fields.TARGET, new org.apache.thrift.meta_data.FieldMetaData("target", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.avatar.MAvatarPostureValues.class)));
      tmpMap.put(_Fields.DURATION, new org.apache.thrift.meta_data.FieldMetaData("duration", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Blend_args.class, metaDataMap);
    }

    public Blend_args() {
    }

    public Blend_args(
      de.mosim.mmi.avatar.MAvatarPostureValues start,
      de.mosim.mmi.avatar.MAvatarPostureValues target,
      double duration)
    {
      this();
      this.start = start;
      this.target = target;
      this.duration = duration;
      setDurationIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public Blend_args(Blend_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetStart()) {
        this.start = new de.mosim.mmi.avatar.MAvatarPostureValues(other.start);
      }
      if (other.isSetTarget()) {
        this.target = new de.mosim.mmi.avatar.MAvatarPostureValues(other.target);
      }
      this.duration = other.duration;
    }

    public Blend_args deepCopy() {
      return new Blend_args(this);
    }

    @Override
    public void clear() {
      this.start = null;
      this.target = null;
      setDurationIsSet(false);
      this.duration = 0.0;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MAvatarPostureValues getStart() {
      return this.start;
    }

    public Blend_args setStart(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues start) {
      this.start = start;
      return this;
    }

    public void unsetStart() {
      this.start = null;
    }

    /** Returns true if field start is set (has been assigned a value) and false otherwise */
    public boolean isSetStart() {
      return this.start != null;
    }

    public void setStartIsSet(boolean value) {
      if (!value) {
        this.start = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MAvatarPostureValues getTarget() {
      return this.target;
    }

    public Blend_args setTarget(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues target) {
      this.target = target;
      return this;
    }

    public void unsetTarget() {
      this.target = null;
    }

    /** Returns true if field target is set (has been assigned a value) and false otherwise */
    public boolean isSetTarget() {
      return this.target != null;
    }

    public void setTargetIsSet(boolean value) {
      if (!value) {
        this.target = null;
      }
    }

    public double getDuration() {
      return this.duration;
    }

    public Blend_args setDuration(double duration) {
      this.duration = duration;
      setDurationIsSet(true);
      return this;
    }

    public void unsetDuration() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DURATION_ISSET_ID);
    }

    /** Returns true if field duration is set (has been assigned a value) and false otherwise */
    public boolean isSetDuration() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DURATION_ISSET_ID);
    }

    public void setDurationIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DURATION_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case START:
        if (value == null) {
          unsetStart();
        } else {
          setStart((de.mosim.mmi.avatar.MAvatarPostureValues)value);
        }
        break;

      case TARGET:
        if (value == null) {
          unsetTarget();
        } else {
          setTarget((de.mosim.mmi.avatar.MAvatarPostureValues)value);
        }
        break;

      case DURATION:
        if (value == null) {
          unsetDuration();
        } else {
          setDuration((java.lang.Double)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case START:
        return getStart();

      case TARGET:
        return getTarget();

      case DURATION:
        return getDuration();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case START:
        return isSetStart();
      case TARGET:
        return isSetTarget();
      case DURATION:
        return isSetDuration();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof Blend_args)
        return this.equals((Blend_args)that);
      return false;
    }

    public boolean equals(Blend_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_start = true && this.isSetStart();
      boolean that_present_start = true && that.isSetStart();
      if (this_present_start || that_present_start) {
        if (!(this_present_start && that_present_start))
          return false;
        if (!this.start.equals(that.start))
          return false;
      }

      boolean this_present_target = true && this.isSetTarget();
      boolean that_present_target = true && that.isSetTarget();
      if (this_present_target || that_present_target) {
        if (!(this_present_target && that_present_target))
          return false;
        if (!this.target.equals(that.target))
          return false;
      }

      boolean this_present_duration = true;
      boolean that_present_duration = true;
      if (this_present_duration || that_present_duration) {
        if (!(this_present_duration && that_present_duration))
          return false;
        if (this.duration != that.duration)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetStart()) ? 131071 : 524287);
      if (isSetStart())
        hashCode = hashCode * 8191 + start.hashCode();

      hashCode = hashCode * 8191 + ((isSetTarget()) ? 131071 : 524287);
      if (isSetTarget())
        hashCode = hashCode * 8191 + target.hashCode();

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(duration);

      return hashCode;
    }

    @Override
    public int compareTo(Blend_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetStart()).compareTo(other.isSetStart());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetStart()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.start, other.start);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetTarget()).compareTo(other.isSetTarget());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTarget()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.target, other.target);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDuration()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("Blend_args(");
      boolean first = true;

      sb.append("start:");
      if (this.start == null) {
        sb.append("null");
      } else {
        sb.append(this.start);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("target:");
      if (this.target == null) {
        sb.append("null");
      } else {
        sb.append(this.target);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("duration:");
      sb.append(this.duration);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (start != null) {
        start.validate();
      }
      if (target != null) {
        target.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class Blend_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public Blend_argsStandardScheme getScheme() {
        return new Blend_argsStandardScheme();
      }
    }

    private static class Blend_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<Blend_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, Blend_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // START
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.start = new de.mosim.mmi.avatar.MAvatarPostureValues();
                struct.start.read(iprot);
                struct.setStartIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // TARGET
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.target = new de.mosim.mmi.avatar.MAvatarPostureValues();
                struct.target.read(iprot);
                struct.setTargetIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // DURATION
              if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
                struct.duration = iprot.readDouble();
                struct.setDurationIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, Blend_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.start != null) {
          oprot.writeFieldBegin(START_FIELD_DESC);
          struct.start.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.target != null) {
          oprot.writeFieldBegin(TARGET_FIELD_DESC);
          struct.target.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(DURATION_FIELD_DESC);
        oprot.writeDouble(struct.duration);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class Blend_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public Blend_argsTupleScheme getScheme() {
        return new Blend_argsTupleScheme();
      }
    }

    private static class Blend_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<Blend_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, Blend_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetStart()) {
          optionals.set(0);
        }
        if (struct.isSetTarget()) {
          optionals.set(1);
        }
        if (struct.isSetDuration()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetStart()) {
          struct.start.write(oprot);
        }
        if (struct.isSetTarget()) {
          struct.target.write(oprot);
        }
        if (struct.isSetDuration()) {
          oprot.writeDouble(struct.duration);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, Blend_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.start = new de.mosim.mmi.avatar.MAvatarPostureValues();
          struct.start.read(iprot);
          struct.setStartIsSet(true);
        }
        if (incoming.get(1)) {
          struct.target = new de.mosim.mmi.avatar.MAvatarPostureValues();
          struct.target.read(iprot);
          struct.setTargetIsSet(true);
        }
        if (incoming.get(2)) {
          struct.duration = iprot.readDouble();
          struct.setDurationIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class Blend_result implements org.apache.thrift.TBase<Blend_result, Blend_result._Fields>, java.io.Serializable, Cloneable, Comparable<Blend_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Blend_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new Blend_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new Blend_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.avatar.MAvatarPostureValues.class))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Blend_result.class, metaDataMap);
    }

    public Blend_result() {
    }

    public Blend_result(
      java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public Blend_result(Blend_result other) {
      if (other.isSetSuccess()) {
        java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues> __this__success = new java.util.ArrayList<de.mosim.mmi.avatar.MAvatarPostureValues>(other.success.size());
        for (de.mosim.mmi.avatar.MAvatarPostureValues other_element : other.success) {
          __this__success.add(new de.mosim.mmi.avatar.MAvatarPostureValues(other_element));
        }
        this.success = __this__success;
      }
    }

    public Blend_result deepCopy() {
      return new Blend_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<de.mosim.mmi.avatar.MAvatarPostureValues> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(de.mosim.mmi.avatar.MAvatarPostureValues elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<de.mosim.mmi.avatar.MAvatarPostureValues>();
      }
      this.success.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues> getSuccess() {
      return this.success;
    }

    public Blend_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<de.mosim.mmi.avatar.MAvatarPostureValues>)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof Blend_result)
        return this.equals((Blend_result)that);
      return false;
    }

    public boolean equals(Blend_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(Blend_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("Blend_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class Blend_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public Blend_resultStandardScheme getScheme() {
        return new Blend_resultStandardScheme();
      }
    }

    private static class Blend_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<Blend_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, Blend_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list272 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<de.mosim.mmi.avatar.MAvatarPostureValues>(_list272.size);
                  @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues _elem273;
                  for (int _i274 = 0; _i274 < _list272.size; ++_i274)
                  {
                    _elem273 = new de.mosim.mmi.avatar.MAvatarPostureValues();
                    _elem273.read(iprot);
                    struct.success.add(_elem273);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, Blend_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (de.mosim.mmi.avatar.MAvatarPostureValues _iter275 : struct.success)
            {
              _iter275.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class Blend_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public Blend_resultTupleScheme getScheme() {
        return new Blend_resultTupleScheme();
      }
    }

    private static class Blend_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<Blend_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, Blend_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (de.mosim.mmi.avatar.MAvatarPostureValues _iter276 : struct.success)
            {
              _iter276.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, Blend_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list277 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<de.mosim.mmi.avatar.MAvatarPostureValues>(_list277.size);
            @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues _elem278;
            for (int _i279 = 0; _i279 < _list277.size; ++_i279)
            {
              _elem278 = new de.mosim.mmi.avatar.MAvatarPostureValues();
              _elem278.read(iprot);
              struct.success.add(_elem278);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}

@prefix ajan: <http://www.ajan.de/ajan-ns#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix http-core: <http://www.w3.org/2006/http#> .
@prefix http-headers: <http://www.w3.org/2008/http-headers#> .
@prefix http-methods: <http://www.w3.org/2008/http-methods#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix actn: <http://www.ajan.de/actn#> .
@prefix mosim: <http://www.dfki.de/mosim-ns#> .
@prefix : <http://localhost:8090/rdf4j/repositories/services#> .

# --------------------------------------------
# --------------- MOSIMService ---------------
# --------------------------------------------

# -------------- :TemplateAction ---------------

:TemplateAction
		rdf:type actn:ServiceAction ;
		rdf:type actn:Safe ;
		rdf:type actn:Idempotent ;
		actn:communication actn:Synchronous ;
		actn:category :Test ;
		rdfs:label "TemplateAction";
		dct:description "Template action" ;
		actn:runBinding :RunTemplateAction ;
		actn:variables (
			[ a actn:ActionVariable;
				sp:varName "s" ]
		);
		actn:consumes [
			a actn:Consumable ;
			actn:sparql """
ASK
WHERE {
	?s ?p ?o .
}"""^^xsd:string ;
		] ;
		actn:produces [
			a actn:Producible ;
			actn:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX actn: <http://www.ajan.de/actn#>
PREFIX dct: <http://purl.org/dc/terms/>
ASK
WHERE {
	?s ?p ?o .
	OPTIONAL {
		?response rdf:type actn:FAULT .
		?response dct:description ?message }
}"""^^xsd:string ;
		] .

:RunTemplateAction
		rdf:type actn:Binding ;
		rdf:type http-core:Request ;
		http-core:httpVersion "1.1" ;
		http-core:mthd http-methods:POST ;
		http-core:requestURI "http://localhost:8092/template"^^xsd:anyURI ;
		http-core:headers ( [
				a http-core:Header ;
				http-core:hdrName http-headers:content-type ;
				http-core:fieldValue "text/turtle"
			][
				a http-core:Header ;
				http-core:hdrName http-headers:accept ;
				http-core:fieldValue "text/turtle"
			]
		);
		http-core:body [
			a actn:Payload ;
			actn:sparql "CONSTRUCT {?s ?p ?o} WHERE {?s ?p ?o}" ;
			#actn:template [ 
			#	a actn:SelectQueryTemplate ;
			#	actn:sparql "Select ?s WHERE {?s ?p ?o}" ;
			#	actn:stringTemplate "Hallo {s}!" .
			#]
		] .

# -------------- :TextAction ---------------

:TextAction
		rdf:type actn:ServiceAction ;
		rdf:type actn:Safe ;
		rdf:type actn:Idempotent ;
		actn:communication actn:Asynchronous ;
		actn:category :Test ;
		rdfs:label "TextAction";
		dct:description "Text action" ;
		actn:runBinding :RunTextAction ;
		actn:abortBinding :AbortTextAction ;
		actn:variables (
			[ a actn:ActionVariable;
				sp:varName "type" ]
			[ a actn:ActionVariable;
				sp:varName "color" ]
		);
		actn:consumes [
			a actn:Consumable ;
			actn:sparql """
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX actn: <http://www.ajan.de/actn#>
ASK
WHERE {
	?some mosim:type ?type .
	?some mosim:color ?color .
	?some mosim:text ?text .
	?c actn:asyncRequestURI ?requestURI .
}"""^^xsd:string ;
		] ;
		actn:produces [
			a actn:Producible ;
			actn:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX actn: <http://www.ajan.de/actn#>
PREFIX dct: <http://purl.org/dc/terms/>
ASK
WHERE {
	mosim:Text mosim:hasShown "done" .
	OPTIONAL {
		?response rdf:type actn:FAULT .
		?response dct:description ?message }
}"""^^xsd:string ;
		] .

:RunTextAction
		rdf:type actn:Binding ;
		rdf:type http-core:Request ;
		http-core:httpVersion "1.1" ;
		http-core:mthd http-methods:POST ;
		http-core:requestURI "http://localhost:8098/actions?action=text"^^xsd:anyURI ;
		http-core:headers ( [
				a http-core:Header ;
				http-core:hdrName http-headers:content-type ;
				http-core:fieldValue "text/turtle"
			][
				a http-core:Header ;
				http-core:hdrName http-headers:accept ;
				http-core:fieldValue "text/turtle"
			]
		);
		http-core:body [
			a actn:Payload ;
			actn:sparql """
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX actn: <http://www.ajan.de/actn#>
PREFIX bt: <http://www.ajan.de/behavior/bt-ns#>
CONSTRUCT {
	mosim:TextServiceRequest mosim:type ?type .
	mosim:TextServiceRequest mosim:color ?color .
	mosim:TextServiceRequest mosim:text ?text .
	mosim:TextServiceRequest mosim:node ?node .
	mosim:TextServiceRequest actn:asyncRequestURI ?requestURI .
}
WHERE {
	?some mosim:type ?type .
	?some mosim:color ?color .
	?some mosim:text ?text .
	?bt bt:btNode ?node .
	?c actn:asyncRequestURI ?requestURI .
}"""^^xsd:string ;
		] .

:AbortTextAction
		rdf:type actn:Binding ;
		rdf:type http-core:Request ;
		http-core:httpVersion "1.1" ;
		http-core:mthd http-methods:POST ;
		http-core:requestURI "http://localhost:8098/actions?action=text/abort"^^xsd:anyURI ;
		http-core:headers ( [
				a http-core:Header ;
				http-core:hdrName http-headers:content-type ;
				http-core:fieldValue "text/turtle"
			][
				a http-core:Header ;
				http-core:hdrName http-headers:accept ;
				http-core:fieldValue "text/turtle"
			]
		);
		http-core:body [
			a actn:Payload ;
			actn:sparql """
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX actn: <http://www.ajan.de/actn#>
CONSTRUCT {
	mosim:MoveToAbortServiceRequest actn:asyncRequestURI ?requestURI .
}
WHERE {
	?c actn:asyncRequestURI ?requestURI .
}"""^^xsd:string ;
		] .

# --------------------------------------------
# -------------- ExampleService --------------
# --------------------------------------------

# -------------- :AsyncAction ---------------

:ExampleWalkAction
		rdf:type actn:ServiceAction ;
		rdf:type actn:Safe ;
		rdf:type actn:Idempotent ;
		actn:communication actn:Asynchronous ;
		actn:category :Test ;
		rdfs:label "ExampleWalkAction";
		dct:description "ExampleWalk Action" ;
		actn:runBinding :RunExampleWalkAction ;
		actn:abortBinding :AbortExampleWalkAction ;
		actn:variables (
			[ a actn:ActionVariable;
				sp:varName "avatar" ]
			[ a actn:ActionVariable;
				sp:varName "current" ]
			[ a actn:ActionVariable;
				sp:varName "target" ]
		);
		actn:consumes [
			a actn:Consumable ;
			actn:sparql """
PREFIX test: <http://test/>
PREFIX actn: <http://www.ajan.de/actn#>
ASK
WHERE {
	?avatar a test:Avatar .
	?avatar test:position ?current .
	?current a test:Position .
	?target a test:Position .
	?c actn:asyncRequestURI ?requestURI .
}"""^^xsd:string ;
		] ;
		actn:produces [
			a actn:Producible ;
			actn:sparql """
PREFIX test: <http://test/>
PREFIX actn: <http://www.ajan.de/actn#>
PREFIX dct: <http://purl.org/dc/terms/>
ASK
WHERE {
	?avatar test:position ?target .
	FILTER NOT EXISTS {
		?avatar test:position ?current .
		FILTER (?target != ?current)
	}
	OPTIONAL {
		?response rdf:type actn:FAULT .
		?response dct:description ?message .
	}
}"""^^xsd:string ;
		] .

:RunExampleWalkAction
		rdf:type actn:Binding ;
		rdf:type http-core:Request ;
		http-core:httpVersion "1.1" ;
		http-core:mthd http-methods:POST ;
		http-core:requestURI "http://localhost:8092/walk"^^xsd:anyURI ;
		http-core:headers ( [
				a http-core:Header ;
				http-core:hdrName http-headers:content-type ;
				http-core:fieldValue "text/turtle"
			][
				a http-core:Header ;
				http-core:hdrName http-headers:accept ;
				http-core:fieldValue "text/turtle"
			]
		);
		http-core:body [
			a actn:Payload ;
			actn:sparql """
PREFIX test: <http://test/>
PREFIX actn: <http://www.ajan.de/actn#>
CONSTRUCT {
  ?avatar a test:Avatar .
	?avatar test:position ?current .
	?target a test:Position .
	?c actn:asyncRequestURI ?requestURI .
}
WHERE {
	?avatar a test:Avatar .
	?avatar test:position ?current .
	?target a test:Position .
	?c actn:asyncRequestURI ?requestURI .
}"""^^xsd:string ;
		] .

:AbortExampleWalkAction
		rdf:type actn:Binding ;
		rdf:type http-core:Request ;
		http-core:httpVersion "1.1" ;
		http-core:mthd http-methods:POST ;
		http-core:requestURI "http://localhost:8092/walk/abort"^^xsd:anyURI ;
		http-core:headers ( [
				a http-core:Header ;
				http-core:hdrName http-headers:content-type ;
				http-core:fieldValue "text/turtle"
			][
				a http-core:Header ;
				http-core:hdrName http-headers:accept ;
				http-core:fieldValue "text/turtle"
			]
		);
		http-core:body [
			a actn:Payload ;
			actn:sparql """
PREFIX test: <http://test/>
CONSTRUCT {
	?avatar a test:Avatar .
}
WHERE {
	?avatar a test:Avatar .
}"""^^xsd:string ;
		] .

# -------------- :SyncAction ---------------

:ExampleSyncAction
		rdf:type actn:ServiceAction ;
		rdf:type actn:Safe ;
		rdf:type actn:Idempotent ;
		actn:communication actn:Synchronous ;
		actn:category :Test ;
		rdfs:label "ExampleSyncAction";
		dct:description "ExampleSync Action" ;
		actn:runBinding :RunExampleSyncAction ;
		actn:variables (
			[ a actn:ActionVariable;
				sp:varName "gruss" ]
			[ a actn:ActionVariable;
				sp:varName "rueckgruss" ]
		);
		actn:consumes [
			a actn:Consumable ;
			actn:sparql """
PREFIX test: <http://test/>
ASK
WHERE {
	test:Subject test:predicate ?gruss .
}"""^^xsd:string ;
		] ;
		actn:produces [
			a actn:Producible ;
			actn:sparql """
PREFIX test: <http://test/>
PREFIX actn: <http://www.ajan.de/actn#>
PREFIX dct: <http://purl.org/dc/terms/>
ASK
WHERE {
	test:Subject test:predicate ?rueckgruss .
	FILTER NOT EXISTS {
		test:Subject test:predicate ?gruss
		FILTER (?gruss != ?rueckgruss)
	}
	OPTIONAL {
		?response rdf:type actn:FAULT .
		?response dct:description ?message
	}
}"""^^xsd:string ;
		] .

:RunExampleSyncAction
		rdf:type actn:Binding ;
		rdf:type http-core:Request ;
		http-core:httpVersion "1.1" ;
		http-core:mthd http-methods:POST ;
		http-core:requestURI "http://localhost:8092/sync"^^xsd:anyURI ;
		http-core:headers ( [
				a http-core:Header ;
				http-core:hdrName http-headers:content-type ;
				http-core:fieldValue "text/turtle"
			][
				a http-core:Header ;
				http-core:hdrName http-headers:accept ;
				http-core:fieldValue "text/turtle"
			]
		);
		http-core:body [
			a actn:Payload ;
			actn:sparql """
PREFIX test: <http://test/>
CONSTRUCT {
	test:Subject test:predicate ?gruss .
}
WHERE {
	test:Subject test:predicate ?gruss .
}"""^^xsd:string ;
		] .

# -------------- :AsyncAction ---------------

:ExampleAsyncAction
		rdf:type actn:ServiceAction ;
		rdf:type actn:Safe ;
		rdf:type actn:Idempotent ;
		actn:communication actn:Asynchronous ;
		actn:category :Test ;
		rdfs:label "ExampleAsyncAction";
		dct:description "ExampleAsync Action" ;
		actn:runBinding :RunExampleAsyncAction ;
		actn:abortBinding :AbortExampleAsyncAction ;
		actn:variables (
			[ a actn:ActionVariable;
				sp:varName "gruss" ]
			[ a actn:ActionVariable;
				sp:varName "rueckgruss" ]
		);
		actn:consumes [
			a actn:Consumable ;
			actn:sparql """
PREFIX test: <http://test/>
PREFIX actn: <http://www.ajan.de/actn#>
ASK
WHERE {
	test:Subject test:predicate ?gruss .
	?c actn:asyncRequestURI ?requestURI .
}"""^^xsd:string ;
		] ;
		actn:produces [
			a actn:Producible ;
			actn:sparql """
PREFIX test: <http://test/>
PREFIX actn: <http://www.ajan.de/actn#>
PREFIX dct: <http://purl.org/dc/terms/>
ASK
WHERE {
	test:Subject test:predicate ?rueckgruss .
	FILTER NOT EXISTS {
		test:Subject test:predicate ?gruss
		FILTER (?gruss != ?rueckgruss)
	}
	OPTIONAL {
		?response rdf:type actn:FAULT .
		?response dct:description ?message
	}
}"""^^xsd:string ;
		] .

:RunExampleAsyncAction
		rdf:type actn:Binding ;
		rdf:type http-core:Request ;
		http-core:httpVersion "1.1" ;
		http-core:mthd http-methods:POST ;
		http-core:requestURI "http://localhost:8092/async"^^xsd:anyURI ;
		http-core:headers ( [
				a http-core:Header ;
				http-core:hdrName http-headers:content-type ;
				http-core:fieldValue "text/turtle"
			][
				a http-core:Header ;
				http-core:hdrName http-headers:accept ;
				http-core:fieldValue "text/turtle"
			]
		);
		http-core:body [
			a actn:Payload ;
			actn:sparql """
PREFIX test: <http://test/>
PREFIX actn: <http://www.ajan.de/actn#>
CONSTRUCT {
	test:Subject test:predicate "Hallo!" .
	?c actn:asyncRequestURI ?requestURI .
}
WHERE {
	?s ?p ?o .
	?c actn:asyncRequestURI ?requestURI .
}"""^^xsd:string ;
		] .

:AbortExampleAsyncAction
		rdf:type actn:Binding ;
		rdf:type http-core:Request ;
		http-core:httpVersion "1.1" ;
		http-core:mthd http-methods:POST ;
		http-core:requestURI "http://localhost:8092/async/abort"^^xsd:anyURI ;
		http-core:headers ( [
				a http-core:Header ;
				http-core:hdrName http-headers:content-type ;
				http-core:fieldValue "text/turtle"
			][
				a http-core:Header ;
				http-core:hdrName http-headers:accept ;
				http-core:fieldValue "text/turtle"
			]
		);
		http-core:body [
			a actn:Payload ;
			actn:sparql """
PREFIX test: <http://test/>
CONSTRUCT {
	test:Subject test:predicate ?gruss .
}
WHERE {
	test:Subject test:predicate ?gruss .
}"""^^xsd:string ;
		] .

# @base <http://localhost:8090/rdf4j/repositories/domain#> .

@prefix agents: <http://localhost:8090/rdf4j/repositories/agents#> .
@prefix behaviors: <http://localhost:8090/rdf4j/repositories/behaviors#> .
@prefix : <http://localhost:8090/rdf4j/repositories/domain#> .
@prefix services: <http://localhost:8090/rdf4j/repositories/services#> .

@prefix dct: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ajan: <http://www.ajan.de/ajan-ns#> .
@prefix bt: <http://www.ajan.de/behavior/bt-ns#> .
@prefix asp: <http://www.ajan.de/behavior/asp-ns#> .
@prefix mosim: <http://www.dfki.de/mosim-ns#> .
@prefix suite: <http://www.dfki.de/suite-ns#> .
@prefix aml: <https://w3id.org/i40/aml#> .
@prefix test: <http://test.de#> .
@prefix wgs84_pos: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix transit: <http://vocab.org/transit/terms/>.
@prefix gn: <http://www.geonames.org/ontology#>.

@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix ex:     <http://www.example.com/>.
@prefix carml: <http://carml.taxonic.com/carml/> .


# --------------------------------------------
# --------------- RML Mappings ---------------
# --------------------------------------------

# --------------------------------
# JsonTest -----------------------
# --------------------------------

:JsonTestMapping {

	# see https://rml.io/specs/rml/ for an example input

	:VenueMapping a rr:TriplesMap;
		rml:logicalSource [
			rml:source [
				a carml:Stream ;
			] ;
			rml:referenceFormulation ql:JSONPath;
			rml:iterator "$"
		];

		rr:subjectMap [
			rr:template "http://loc.example.com/city/{location.city}";
			rr:class schema:City
		];

		rr:predicateObjectMap [
			rr:predicate wgs84_pos:lat;
			rr:objectMap [
				rml:reference "venue.latitude"
			]
		];

		rr:predicateObjectMap [
			rr:predicate wgs84_pos:long;
			rr:objectMap [
				rml:reference "venue.longitude"
			]
		];

		rr:predicateObjectMap [
			rr:predicate gn:countryCode;
			rr:objectMap [
				rml:reference "location.country"
			]
		].
}

# --------------------------------
# CSVTest ------------------------
# --------------------------------

:CSVTestMapping {

	# see https://rml.io/specs/rml/ for an example input

	:AirportMapping a rr:TriplesMap;
		rml:logicalSource [
			rml:source [
				a carml:Stream ;
			] ;
			rml:referenceFormulation ql:CSV
		];

		rr:subjectMap [
			rr:template "http://airport.example.com/{id}";
			rr:class transit:Stop
		];

		rr:predicateObjectMap [
			rr:predicate transit:route;
			rr:objectMap [
				rml:reference "stop";
				rr:datatype xsd:int
			]
		];

		rr:predicateObjectMap [
			rr:predicate wgs84_pos:lat;
			rr:objectMap [
				rml:reference "latitude"
			]
		];

		rr:predicateObjectMap [
			rr:predicate wgs84_pos:long;
			rr:objectMap [
			rml:reference "longitude"
			]
		].
}

# --------------------------------
# XMLTest ------------------------
# --------------------------------

:XMLTestMapping {

	# see https://rml.io/specs/rml/ for an example input

	:TransportMapping a rr:TriplesMap;
		rml:logicalSource [
			rml:source [
				a carml:Stream ;
			] ;
			rml:iterator "/transport/bus";
			rml:referenceFormulation ql:XPath;
		];

		rr:subjectMap [
			rr:template "http://trans.example.com/{@id}";
			rr:class transit:Stop
		];

		rr:predicateObjectMap [
			rr:predicate transit:stop;
			rr:objectMap [
				rml:reference "route/stop/@id";
				rr:datatype xsd:int
			]
		];

		rr:predicateObjectMap [
			rr:predicate rdfs:label;
			rr:objectMap [
				rml:reference "route/stop"
			]
		].
}

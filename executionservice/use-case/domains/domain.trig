# @base <http://localhost:8090/rdf4j/repositories/domain#> .

@prefix agents: <http://localhost:8090/rdf4j/repositories/agents#> .
@prefix behaviors: <http://localhost:8090/rdf4j/repositories/behaviors#> .
@prefix : <http://localhost:8090/rdf4j/repositories/domain#> .
@prefix services: <http://localhost:8090/rdf4j/repositories/services#> .

@prefix dct: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ajan: <http://www.ajan.de/ajan-ns#> .
@prefix bt: <http://www.ajan.de/behavior/bt-ns#> .
@prefix asp: <http://www.ajan.de/behavior/asp-ns#> .
@prefix mosim: <http://www.dfki.de/mosim-ns#> .

@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix ex:     <http://www.example.com/>.

# --------------------------------------------
# --------------- RML Mappings ---------------
# --------------------------------------------

# Input: 
# 	{ "tasks": [
#		{
#		"id": 1,
#		"operation": "position",
#		"part": "partname or id - we can first use ID if it makes it easier for you",
#		"tool": "left hand",
#		"finallocation": "part name or id of the dummy element"
#		},
#		{
#		"id": 2,
#		"operation": "tighten final",
#		"part": "partname or id - we can first use ID if it makes it easier for you",
#		"tool": "pneumatic wrench",
#		"finallocation": "part name or id of the dummy element in the scene"
#		}
#	] }
# Event: agents:JsonEvent
# Output: <http://www.ajan.de/ajan-mapping-ns#Distance> rdf:type <http://www.dfki.de/hybrit-ns#Distance> ;					[agents:JsonEvent]
#														<http://www.ajan.de/ajan-mapping-ns#value> "10.0"^^xsd:double . 	[agents:JsonEvent]

ajan:TBox {
	mosim:Avatar rdfs:subClassOf mosim:AnimatedObject .
	mosim:Avatar rdfs:subClassOf mosim:Object .
}

mosim:Mapping {
:TaskMapping
	rml:logicalSource [
		rml:referenceFormulation ql:JSONInput;
	    rml:iterator "$.tasks.[*]"
	] ;

	rr:subjectMap [
		rr:template "http://www.ajan.de/ajan-mapping-ns#Task/{step}" ;
		rr:class mosim:Task ;
	] ;

	rr:predicateObjectMap [
		rr:predicate mosim:step ;
		rr:objectMap [
			rml:reference "step" ;
			rr:datatype xsd:int
		]
	] ;
	rr:predicateObjectMap [
		rr:predicate mosim:operation ;
		rr:objectMap [
			rml:reference "operation" ;
			rr:datatype xsd:string
		]
	] ;
	rr:predicateObjectMap [
		rr:predicate mosim:part ;
		rr:objectMap [
			rr:parentTriplesMap :PartMapping ;
			rr:joinCondition [
            	rr:child "part" ;
            	rr:parent "part" ;
        	]
		]
	] ;
	rr:predicateObjectMap [
		rr:predicate mosim:tool ;
		rr:objectMap [
			rr:parentTriplesMap :ToolMapping ;
			rr:joinCondition [
            	rr:child "tool" ;
            	rr:parent "tool" ;
        	]
		]
	#] ;
	#rr:predicateObjectMap [
	#	rr:predicate mosim:position ;
	#	rr:objectMap [
	#		rr:parentTriplesMap :PositionMapping ;
	#		rr:joinCondition [
    #        	rr:child "position" ;
    #        	rr:parent "position" ;
    #    	]
	#	]
	]	.

:PartMapping
	rml:logicalSource [
		rml:referenceFormulation ql:JSONInput;
	    rml:iterator "$.tasks.[*]"
	] ;

	rr:subjectMap [
		rr:template "http://www.ajan.de/ajan-mapping-ns#Part/{part.type}/{part.id}" ;
		rr:class mosim:Part ;
	] ;

	rr:predicateObjectMap [
		rr:predicate mosim:type ;
		rr:objectMap [
			rml:reference "part.type" ;
			rr:datatype xsd:string
		]
	] ;
	rr:predicateObjectMap [
		rr:predicate mosim:id ;
		rr:objectMap [
			rml:reference "part.id" ;
			rr:datatype xsd:string
		]
	] .

:ToolMapping
	rml:logicalSource [
		rml:referenceFormulation ql:JSONInput;
	    rml:iterator "$.tasks.[*]"
	] ;

	rr:subjectMap [
		rr:template "http://www.ajan.de/ajan-mapping-ns#Tool/{tool.type}/{tool.id}" ;
		rr:class mosim:Tool ;
	] ;
	
	rr:predicateObjectMap [
		rr:predicate mosim:type ;
		rr:objectMap [
			rml:reference "tool.type" ;
			rr:datatype xsd:string
		]
	] ;
	rr:predicateObjectMap [
		rr:predicate mosim:id ;
		rr:objectMap [
			rml:reference "tool.id" ;
			rr:datatype xsd:string
		]
	] .

#:PositionMapping
#	rml:logicalSource [
#		rml:referenceFormulation ql:JSONInput;
#	    rml:iterator "$.tasks.[*]"
#	] ;
#
#	rr:subjectMap [
#		rr:template "http://www.ajan.de/ajan-mapping-ns#Position/{position.type}/{position.id}" ;
#		rr:class mosim:Position ;
#	] ;
#	
#	rr:predicateObjectMap [
#		rr:predicate mosim:type ;
#		rr:objectMap [
#			rml:reference "position.type" ;
#			rr:datatype xsd:string
#		]
#	] ;
#	rr:predicateObjectMap [
#		rr:predicate mosim:id ;
#		rr:objectMap [
#			rml:reference "position.id" ;
#			rr:datatype xsd:string
#		]
#	] .
}
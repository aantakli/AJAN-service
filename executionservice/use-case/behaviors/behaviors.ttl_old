# @base <http://localhost:8090/rdf4j/repositories/behaviors#> .

@prefix agents: <http://localhost:8090/rdf4j/repositories/agents#> .
@prefix : <http://localhost:8090/rdf4j/repositories/behaviors#> .
@prefix domain: <http://localhost:8090/rdf4j/repositories/domain#> .
@prefix services: <http://localhost:8090/rdf4j/repositories/services#> .
@prefix actn: <http://www.ajan.de/actn#> .

@prefix dct: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ajan: <http://www.ajan.de/ajan-ns#> .
@prefix bt: <http://www.ajan.de/behavior/bt-ns#> .
@prefix mosim: <http://www.dfki.de/mosim-ns#> .
@prefix bt-mosim: <http://www.ajan.de/behavior/mosim-ns#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix http-core: <http://www.w3.org/2006/http#> .
@prefix http-headers: <http://www.w3.org/2008/http-headers#> .
@prefix http-methods: <http://www.w3.org/2008/http-methods#> .
@prefix thrift: <http://www.ajan.de/behavior/thrift-ns#> .
@prefix steer: <http://www.ajan.de/behavior/steer-ns#>.

# --------------------------------------------
# ------- ExampleSceneGenericBehavior -------
# --------------------------------------------

# ----------- Endpoint ------------

# localhost:8080/ajan/agents/Agento?capability=execute | POST | text/turtle
# Body: ""

# ----------- Behavior ------------

:ExampleSceneGenericBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "ExampleSceneGenericBehavior" ;
	bt:hasChild
		[ a bt:Sequence ;
		  bt:hasChildren (
			[ a bt:Parallel ;
				#bt:orchestration bt:Join ;
				bt:hasChildren (
					:GenericIdleTest
					[ a bt:Sequence ;
						bt:hasChildren (
							:GenericReachTest
							:GenericCarryTest
							:GenericWalkTest
							[ a bt:Parallel ;
								bt:hasChildren (
									:GenericIdleTest2
									[ a bt:Sequence ;
										bt:hasChildren (
											:GenericMoveTest
											:GenericReleaseTest
										)
									]
								)
							]
						)
					]
				)
			]
		  )
		] .

# ----------- Behavior ------------

:InitialBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "InitialBehavior" ;
	bt:hasChild
		[ a bt:Sequence ;
		  bt:hasChildren (
			:CreateEndCallbackServer
			:CreateErrorCallbackServer
			:CreatePositioningCallbackServer
			:RegisterEndListener
			:RegisterErrorListener
			:RegisterPositioningListener
			#:GetAvailableMMUs
			:GetScene
		  )
		] .

# ----------- Behavior ------------

:FinalBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "FinalBehavior" ;
	bt:hasChild
		[ a bt:Sequence ;
		  bt:hasChildren (
			:DeleteEndCallbackServer
			:DeleteErrorCallbackServer
			:DeletePositioningCallbackServer
			:UnregisterEndListener
			:UnregisterErrorListener
			:UnregisterPositioningListener
		  )
		] .

# -------

:GetAvailableMMUs
	a bt-mosim:GetAvailableMMUs ;
	rdfs:label "GetAvailableMMUs" ;
	bt-mosim:host [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	?cosim rdf:type mosim:Registry .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
	] ;
	bt-mosim:sessionID "AJAN-123"^^xsd:string ;
	bt:targetBase ajan:AgentKnowledge .

# -------

:GetScene
	a bt-mosim:GetScene ;
	rdfs:label "GetScene" ;
	bt-mosim:host [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	?scene rdf:type mosim:Scene .
	?scene mosim:host ?host .
	?scene mosim:port ?port .
}"""^^xsd:string ;
	] ;
	bt:targetBase ajan:AgentKnowledge .

# -------

:CreateEndCallbackServer
	a bt-mosim:CreateCallbackServer ;
	rdfs:label "CreateEndCallbackServer" ;
	bt-mosim:callback "8083"^^xsd:int .

# -------

:CreateErrorCallbackServer
	a bt-mosim:CreateCallbackServer ;
	rdfs:label "CreateErrorCallbackServer" ;
	bt-mosim:callback "8084"^^xsd:int .

# -------

:CreatePositioningCallbackServer
	a bt-mosim:CreateCallbackServer ;
	rdfs:label "CreatePositioningCallbackServer" ;
	bt-mosim:callback "8085"^^xsd:int .

# -------

:RegisterEndListener
	a bt-mosim:RegisterListener ;
	rdfs:label "RegisterEndListener" ;
	bt-mosim:eventType "end" ;
	bt-mosim:host [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
	] ;
	bt-mosim:callback "8083"^^xsd:int ;
	bt:targetBase ajan:AgentKnowledge .

# -------

:RegisterErrorListener
	a bt-mosim:RegisterListener ;
	rdfs:label "RegisterErrorListener" ;
	bt-mosim:eventType "initError" ;
	bt-mosim:host [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
	] ;
	bt-mosim:callback "8084"^^xsd:int ;
	bt:targetBase ajan:AgentKnowledge .
	
# -------

:RegisterPositioningListener
	a bt-mosim:RegisterListener ;
	rdfs:label "RegisterPositioningListener" ;
	bt-mosim:eventType "PositioningFinished" ;
	bt-mosim:host [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
	] ;
	bt-mosim:callback "8085"^^xsd:int ;
	bt:targetBase ajan:AgentKnowledge .

# -------

:DeleteEndCallbackServer
	a bt-mosim:DeleteCallbackServer ;
	rdfs:label "DeleteEndCallbackServer" ;
	bt-mosim:callback "8083"^^xsd:int .

# -------

:DeleteErrorCallbackServer
	a bt-mosim:DeleteCallbackServer ;
	rdfs:label "DeleteErrorCallbackServer" ;
	bt-mosim:callback "8084"^^xsd:int .

# -------

:DeletePositioningCallbackServer
	a bt-mosim:DeleteCallbackServer ;
	rdfs:label "DeletePositioningCallbackServer" ;
	bt-mosim:callback "8085"^^xsd:int .

# -------

:UnregisterEndListener
	a bt-mosim:UnregisterListener ;
	rdfs:label "UnregisterEndListener" ;
	bt-mosim:eventType "end" ;
	bt-mosim:host [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
	] ;
	bt-mosim:callback "8083"^^xsd:int ;
	bt:targetBase ajan:AgentKnowledge .

# -------

:UnregisterErrorListener
	a bt-mosim:UnregisterListener ;
	rdfs:label "UnregisterErrorListener" ;
	bt-mosim:eventType "initError" ;
	bt-mosim:host [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
	] ;
	bt-mosim:callback "8084"^^xsd:int ;
	bt:targetBase ajan:AgentKnowledge .

# -------

:UnregisterPositioningListener
	a bt-mosim:UnregisterListener ;
	rdfs:label "UnregisterPositioningListener" ;
	bt-mosim:eventType "PositioningFinished" ;
	bt-mosim:host [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
	] ;
	bt-mosim:callback "8085"^^xsd:int ;
	bt:targetBase ajan:AgentKnowledge .

# -------

:TemplateTest
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "TemplateTest" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:TemplateAction .

# -------

:GenericIdleTest
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "idle" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
CONSTRUCT {
	_:instruction mosim:mmu "idle" .
	_:instruction mosim:objects "" .
	_:instruction mosim:mmuProperties "" .
	_:instruction mosim:actionName "IdleID" .
	_:instruction mosim:startCondition "" .
	_:instruction mosim:endCondition "" .
	_:instruction mosim:host ?host .
	_:instruction mosim:port ?port .
}
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:GenericAsyncInstruction .

# -------

:GenericReachTest
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "reach" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
CONSTRUCT {
	_:instruction mosim:mmu "Pose/Reach" .
	_:instruction mosim:objects "GraspObject" .
	_:instruction mosim:mmuProperties "TargetID, <id@GraspObject>; Hand, Right" .
	_:instruction mosim:actionName "" .
	_:instruction mosim:startCondition "" .
	_:instruction mosim:endCondition "" .
	_:instruction mosim:host ?host .
	_:instruction mosim:port ?port .
}
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:GenericAsyncInstruction .

# -------

:GenericCarryTest
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "carry" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
CONSTRUCT {
	_:instruction mosim:mmu "Object/Carry" .
	_:instruction mosim:objects "GraspObject" .
	_:instruction mosim:mmuProperties "TargetID, <id@GraspObject>; Hand, Right; AddOffset, false" .
	_:instruction mosim:actionName "CarryID" .
	_:instruction mosim:startCondition "" .
	_:instruction mosim:endCondition "" .
	_:instruction mosim:host ?host .
	_:instruction mosim:port ?port .
}
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:GenericAsyncInstruction .

# -------

:GenericWalkTest
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "walk" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
CONSTRUCT {
	_:instruction mosim:mmu "walk" .
	_:instruction mosim:objects "WalkTarget2" .
	_:instruction mosim:mmuProperties "TargetID, <id@WalkTarget2>; OnStart, <actionId@IdleID>:EndInstruction" .
	_:instruction mosim:actionName "WalkID" .
	_:instruction mosim:startCondition "" .
	_:instruction mosim:endCondition "" .
	_:instruction mosim:host ?host .
	_:instruction mosim:port ?port .
}
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:GenericAsyncInstruction .

# -------

:GenericIdleTest2
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "idle" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
CONSTRUCT {
	_:instruction mosim:mmu "idle" .
	_:instruction mosim:objects "" .
	_:instruction mosim:mmuProperties "" .
	_:instruction mosim:actionName "IdleID2" .
	_:instruction mosim:startCondition "" .
	_:instruction mosim:endCondition "" .
	_:instruction mosim:host ?host .
	_:instruction mosim:port ?port .
}
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:GenericAsyncInstruction .

# -------

:GenericMoveTest
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "move" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
CONSTRUCT {
	_:instruction mosim:mmu "Object/Move" .
	_:instruction mosim:objects "GraspObject; PositioningTargetRight" .
	_:instruction mosim:mmuProperties "SubjectID, <id@GraspObject>; TargetID, <id@PositioningTargetRight>; OnStart, <actionId@CarryID>:EndInstruction" .
	_:instruction mosim:actionName "" .
	_:instruction mosim:startCondition "" .
	_:instruction mosim:endCondition "" .
	_:instruction mosim:host ?host .
	_:instruction mosim:port ?port .
}
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:GenericAsyncInstruction .

# -------

:GenericReleaseTest
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "release" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
CONSTRUCT {
	_:instruction mosim:mmu "Object/Release" .
	_:instruction mosim:objects "" .
	_:instruction mosim:mmuProperties "Hand, Right" .
	_:instruction mosim:actionName "" .
	_:instruction mosim:startCondition "" .
	_:instruction mosim:endCondition "" .
	_:instruction mosim:host ?host .
	_:instruction mosim:port ?port .
}
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:GenericAsyncInstruction .


# --------------------------------------------
# ----------- ExampleSceneBehavior ----------
# --------------------------------------------

# ----------- Endpoint ------------

# localhost:8080/ajan/agents/Agento?capability=execute | POST | text/turtle
# Body: ""

# ----------- Behavior ------------

:ExampleSceneBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "ExampleSceneBehavior" ;
	bt:hasChild
		[ a bt:Sequence ;
		  bt:hasChildren (
			:IdleTest
			:ReachTest
			:CarryTest
			:AbortIdle
			:WalkTest
			:IdleTest
			#:AbortCarry
			:MoveTest
			:ReleaseTest
		  )
		] .

:WalkBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "WalkBehavior" ;
	bt:hasChild
		[ a bt:Sequence ;
		  bt:hasChildren (
			:HandleWalkGoal
			:GetWalkPoints
			:AbortIdle
			[ a bt:UntilSuccess ;
				bt:hasChild
					[ a bt:Sequence ;
						bt:hasChildren (
							[ a bt:Priority ;
								bt:hasChildren (
									[ a bt:Invert ;
										bt:hasChild 
											:WaypointLeft
									]
									:SetFocusWaypoint
								)
							]
							[ a bt:Priority ;
								bt:hasChildren (
									:WalkToWalkpoint
									[ a bt:Sequence ;
										bt:hasChildren (
											:DeleteInFocusWaypoint
											[ a bt:Invert ;
												bt:hasChild 
													:WaypointLeft
											]
										)
									]
								)
							]
						)
					]
			]
			:DeleteWalkpoints
			:RemoveWalkGoalInput
		  )
		] .

:HandleWalkGoal
	a bt:HandleEvent;
	rdfs:label "HandleWalkGoal" ;
	bt:eventContext <http://test/WalkGoal> ;
	bt:validate [
		a bt:ConstructQuery ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX sp: <http://spinrdf.org/sp#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	test:WalkTarget rdf:value ?walkTarget .
}
WHERE { GRAPH <http://localhost:8090/rdf4j/repositories/agents#WalkGoal> {
	?target sp:varName "target".
	?target rdf:value ?walkTarget .
} }"""^^xsd:string ;
		] .

# -------

:GetWalkPoints
	a bt-mosim:GetWalkPoints ;
	rdfs:label "GetWalkPoints" ;
	bt-mosim:host [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	VALUES ?host { "127.0.0.1" }
	VALUES ?port { 8905 }
}"""^^xsd:string ;
	] ;
	bt-mosim:scene [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	?scene rdf:type mosim:Scene .
	?scene mosim:host ?host .
	?scene mosim:port ?port .
}"""^^xsd:string ;
	] ;
	bt-mosim:sceneObjects [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?id
WHERE {
	VALUES ?label {"Obstacle" "PositioningTargetLeft"}
	?object rdf:type mosim:MSceneObject .
	?object rdfs:label  ?label .
	?object mosim:id ?id .
}"""^^xsd:string ;
	] ;
	bt-mosim:walkTarget [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX test: <http://test/>
SELECT ?targetID
WHERE {
	test:WalkTarget rdf:value ?target .
	?target rdf:type mosim:MSceneObject .
	?target mosim:id ?targetID .
}"""^^xsd:string ;
	] ;
	bt:targetBase ajan:AgentKnowledge .

# -------

:WaypointLeft 
	a bt:Condition;
	rdfs:label "WaypointLeft?" ;
	bt:query [
		a bt:Constraint ;
		a bt:AskQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
ASK
WHERE {
	?walkpoint rdf:type mosim:MWalkPoint .
}"""^^xsd:string ;
	] .

# -------

:SetFocusWaypoint 
	a bt:Update ;
	rdfs:label "SetFocusWaypoint?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

INSERT {
	?walkpoint rdf:type mosim:InFocus .
}
WHERE {
	?walkpoint rdf:type mosim:MWalkPoint .
	{ 
		SELECT ?walkpoint
		WHERE { ?walkpoint rdf:type mosim:MWalkPoint . }
		LIMIT 1 
	}
}"""^^xsd:string ;
	] .

# -------

:WalkToWalkpoint
	a bt:Action ;
	rdfs:label "walk(MMU,Object)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:isLocatedAt ?position .
	?transform rdf:type mosim:MTransform .
	?transform mosim:id ?id .
	?transform mosim:posX ?posX .
	?transform mosim:posY ?posY .
	?transform mosim:posZ ?posZ .
	?transform mosim:rotX ?rotX .
	?transform mosim:rotY ?rotY .
	?transform mosim:rotZ ?rotZ .
	?transform mosim:rotW ?rotW .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:isLocatedAt ?position .
	?walkpoint rdf:type mosim:MWalkPoint .
	?walkpoint rdf:type mosim:InFocus .
	?walkpoint mosim:transform ?transform .
	?transform mosim:id ?id .
	?transform mosim:posX ?posX .
	?transform mosim:posY ?posY .
	?transform mosim:posZ ?posZ .
	?transform mosim:rotX ?rotX .
	?transform mosim:rotY ?rotY .
	?transform mosim:rotZ ?rotZ .
	?transform mosim:rotW ?rotW .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:WalkInstruction .

# -------

:DeleteInFocusWaypoint
	a bt:Update ;
	rdfs:label "DeleteInFocusWaypoint?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

DELETE {
	?walkpoint rdf:type mosim:MWalkPoint .
	?walkpoint rdf:type mosim:InFocus .
	?walkpoint mosim:transform ?transform .
	?transform mosim:id ?id .
	?transform mosim:posX ?posX .
	?transform mosim:posY ?posY .
	?transform mosim:posZ ?posZ .
	?transform mosim:rotX ?rotX .
	?transform mosim:rotY ?rotY .
	?transform mosim:rotZ ?rotZ .
	?transform mosim:rotW ?rotW .
}
WHERE {
	?walkpoint rdf:type mosim:MWalkPoint .
	?walkpoint rdf:type mosim:InFocus .
	?walkpoint mosim:transform ?transform .
	?transform mosim:id ?id .
	?transform mosim:posX ?posX .
	?transform mosim:posY ?posY .
	?transform mosim:posZ ?posZ .
	?transform mosim:rotX ?rotX .
	?transform mosim:rotY ?rotY .
	?transform mosim:rotZ ?rotZ .
	?transform mosim:rotW ?rotW .
}"""^^xsd:string ;
	] .

# -------

:DeleteWalkpoints
	a bt:Update ;
	rdfs:label "DeleteWalkpoints?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

DELETE {
	?walkpoint rdf:type mosim:MWalkPoint .
	?walkpoint mosim:transform ?transform .
	?transform mosim:id ?id .
	?transform mosim:posX ?posX .
	?transform mosim:posY ?posY .
	?transform mosim:posZ ?posZ .
	?transform mosim:rotX ?rotX .
	?transform mosim:rotY ?rotY .
	?transform mosim:rotZ ?rotZ .
	?transform mosim:rotW ?rotW .
}
WHERE {
	?walkpoint rdf:type mosim:MWalkPoint .
	?walkpoint mosim:transform ?transform .
	?transform mosim:id ?id .
	?transform mosim:posX ?posX .
	?transform mosim:posY ?posY .
	?transform mosim:posZ ?posZ .
	?transform mosim:rotX ?rotX .
	?transform mosim:rotY ?rotY .
	?transform mosim:rotZ ?rotZ .
	?transform mosim:rotW ?rotW .
}"""^^xsd:string ;
	] .

# -------

:RemoveWalkGoalInput
	a bt:Update ;
	rdfs:label "RemoveWalkGoalInput?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX test: <http://test/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
DELETE {
	test:WalkTarget rdf:value ?walkTarget .
}
WHERE {
	test:WalkTarget rdf:value ?walkTarget .
}"""^^xsd:string ;
	] .

# -------

:IdleTest
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "idle()" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:IdleInstruction .

# -------

:AbortIdle
	a bt-mosim:AbortInstruction ;
	rdfs:label "AbortInstruction" ;
	bt-mosim:host [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
	] ;
	bt-mosim:instructionID [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?id 
WHERE {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:instruction ?instruction .
	?instruction mosim:mmu "idle" .
	?instruction mosim:actionID ?id .
}"""^^xsd:string ;
	] .

# -------

:ReachTest
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "reach(MMU,Object,Hand)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:hand "Right" .
	?target rdf:type mosim:MSceneObject .
	?target mosim:id ?id .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	?target rdf:type mosim:MSceneObject .
	?target rdfs:label "GraspObject" .
	?target mosim:id ?id .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:ReachInstruction .

# -------

:CarryTest
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "carry(Object,Hand)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:hand "Right" .
	?target rdf:type mosim:MSceneObject .
	?target mosim:id ?id .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	?target rdf:type mosim:MSceneObject .
	?target rdfs:label "GraspObject" .
	?target mosim:id ?id .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:CarryInstruction .

# -------

:WalkTest
	a bt:Action ;
	rdfs:label "walk(MMU,Object)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:isLocatedAt ?position .
	?target rdf:type mosim:MSceneObject .
	?target mosim:id ?id .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:isLocatedAt ?position .
	?target rdf:type mosim:MSceneObject .
	?target rdfs:label "WalkTarget2" .
	?target mosim:id ?id .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:WalkInstruction .

# -------

:AbortCarry
	a bt-mosim:AbortInstruction ;
	rdfs:label "AbortCarry" ;
	bt-mosim:host [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
	] ;
	bt-mosim:instructionID [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?id 
WHERE {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:instruction ?instruction .
	?instruction mosim:mmu "Object/Carry" .
	?instruction mosim:actionID ?id .
}"""^^xsd:string ;
	] .

# -------

:MoveTest
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "move(Object,Subject,Hand)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:hand "Right" .
	?subject rdf:type mosim:FinalLocation .
	?subject mosim:id ?subID .
	?object rdf:type mosim:MSceneObject .
	?object mosim:id ?partID .
	
	?instruction rdf:type mosim:Instruction .
	?instruction mosim:actionID ?instID .
	
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	?object rdf:type mosim:MSceneObject .
  	?object rdfs:label "GraspObject" .
	?object mosim:id ?partID .
	?subject rdf:type mosim:MSceneObject .
	?subject rdfs:label "PositioningTargetRight" .
	?subject mosim:id ?subID .
	
	?instruction rdf:type mosim:Instruction .
	?instruction mosim:actionID ?instID .
	?instruction mosim:mmu "Object/Carry" .
	
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:MoveInstruction .

# -------

:ReleaseTest
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "release(Object,Hand)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:hand "Right" .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:ReleaseInstruction .


# --------------------------------------------
# --------- ExamplePositionBehavior ---------
# --------------------------------------------

# ----------- Endpoint ------------

# localhost:8080/ajan/agents/Agento?capability=execute | POST | text/turtle
# Body: ""

# ----------- Behavior ------------

:ExamplePositionBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "ExamplePositionBehavior" ;
	bt:hasChild
		[ a bt:Sequence ;
		  bt:hasChildren (
			:AddTestInfos
			:ProducePositionGoal
		  )
		] .

:AddTestInfos
	a bt:Update ;
	rdfs:label "AddTestInfos?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
INSERT {
	?avatar mosim:hand "Right" .

	<http://test/> mosim:runningTask <http://www.ajan.de/ajan-mapping-ns#Task/0> .

	<http://www.ajan.de/ajan-mapping-ns#Task/0> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.dfki.de/mosim-ns#Task> .
	<http://www.ajan.de/ajan-mapping-ns#Task/0> mosim:step "0"^^<http://www.w3.org/2001/XMLSchema#int> .
	<http://www.ajan.de/ajan-mapping-ns#Task/0> mosim:operation "Position" .
    <http://www.ajan.de/ajan-mapping-ns#Task/0> mosim:part <http://www.ajan.de/ajan-mapping-ns#Part/GraspObject/NULL> .
	<http://www.ajan.de/ajan-mapping-ns#Task/0> mosim:tool <http://www.ajan.de/ajan-mapping-ns#Tool/RightHand/NULL> .
	
	<http://www.ajan.de/ajan-mapping-ns#Part/GraspObject/NULL> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> mosim:Part .
	<http://www.ajan.de/ajan-mapping-ns#Part/GraspObject/NULL> mosim:type "GraspObject" .
	<http://www.ajan.de/ajan-mapping-ns#Part/GraspObject/NULL> mosim:id "NULL" .

	<http://www.ajan.de/ajan-mapping-ns#Tool/RightHand/NULL> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> mosim:Tool .
	<http://www.ajan.de/ajan-mapping-ns#Tool/RightHand/NULL> mosim:type "RightHand" .
	<http://www.ajan.de/ajan-mapping-ns#Tool/RightHand/NULL> mosim:id "NULL" .
}
WHERE {
	?avatar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> mosim:Avatar .
}"""^^xsd:string ;
	] .

# --------------------------------------------
# ------------- MOSIMBehavior --------------
# --------------------------------------------

# ----------- Endpoint ------------

# localhost:8080/ajan/agents/Agento?capability=example | POST | text/turtle
# Body: "<http://test/Subject> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://test/Object> .
#		 <http://test/Subject> <http://test/predicate> "Hallo!" ."

# ----------- Behavior ------------

:MOSIMBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "MOSIMBehavior" ;
	bt:hasChild
		[ a bt:Sequence ;
	  	  bt:hasChildren (
	  	    :InitUpdate
	  	    :GetTaskList
	  	    [ a bt:Repeater ;
	  	      bt:setTimes [
			    a bt:IntValue ;
				bt:query [
					a bt:SelectQuery ;
					bt:originBase ajan:AgentKnowledge ;
					bt:sparql """
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX mosim: <http://www.dfki.de/mosim-ns#>

SELECT (count(?task) as ?intValue)
WHERE {
	?task rdf:type mosim:Task .
	?some mosim:runningTask ?running .
	FILTER (?task != ?running)
}"""^^xsd:string ;
				  ]
			  ] ;
	  	      bt:hasChild [
	  	      	a bt:Sequence ;
			  	bt:hasChildren (
			  	  	:SetFocus
			  	  	[ a bt:Executor ;
			  	  	  bt:selectChild [
			  	  	  	a bt:IntValue ;
			  	  	  	bt:query [
			  	  	  		a bt:SelectQuery ;
							bt:originBase ajan:AgentKnowledge ;
							bt:sparql """
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX mosim: <http://www.dfki.de/mosim-ns#>

SELECT ?intValue
WHERE {
	?task rdf:type mosim:Task .
	?task mosim:operation ?operation .
	BIND (
		  IF ( CONTAINS(?operation,"Position"), 1,
		  IF ( CONTAINS(?operation,"Rough"), 1,
		  IF ( CONTAINS(?operation,"Exact"), 1, 
		  IF ( CONTAINS(?operation,"Stick"), 1,
		  IF ( CONTAINS(?operation,"Remove"), 1,
		  IF ( CONTAINS(?operation,"Tighten"), 2,
		  IF ( CONTAINS(?operation,"Loose"), 2,
		  IF ( CONTAINS(?operation,"Fully"), 2,
		  IF ( CONTAINS(?operation,"Torque"), 2,
		  IF ( CONTAINS(?operation,"Untighten"), 2,
		  IF ( CONTAINS(?operation,"Check"), 3,
		  IF ( CONTAINS(?operation,"Visual"), 3,
		  IF ( CONTAINS(?operation,"Manual"), 3,
		  IF ( CONTAINS(?operation,"Adapt"), 3,
		  0)))))))))))))) as ?intValue)
	{ SELECT ?task
	WHERE {
		?running mosim:runningTask ?task .
	}}
}"""^^xsd:string ;
	  	      				]
			  	  	  	] ;
			  	  	  bt:hasChildren (
			  	  	  	:DefaultBehavior
			  	  	  	:ProducePositionGoal
			  	  	  	#:ProduceTightenGoal
						#:ProduceCheckGoal
			  	  	  )
			  	  	]
			  	)
	  	      ]
	  	    ]
	  	  )
	  	] .

:DefaultBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "DefaultBehavior" ;
	bt:hasChild
		[ a bt:Sequence ;
		  bt:hasChildren (
		  	[ a bt:Condition;
			rdfs:label "CheckKB" ;
			bt:query [
				a bt:Constraint ;
				a bt:AskQuery ;
				bt:originBase ajan:AgentKnowledge ;
				bt:sparql """
ASK
WHERE {
	?s ?p ?o .
}"""^^xsd:string ;
				]
			]
		 )
	] .

:InitUpdate
	a bt:Update ;
	rdfs:label "InitUpdate?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX test: <http://test/>
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
INSERT {
	?avatar mosim:runningTask test:Task .
	test:Task mosim:step -1 .
	test:Task a mosim:Task .
	?avatar mosim:hand "Right" .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
}"""^^xsd:string ;
	] .

# -------

# "http://localhost:8092/api?action=getTaskList&token=abc" -------

:GetTaskList
	a bt:QueryJsonDomain ;
	rdfs:label "GetTaskList" ;
	bt:mapping mosim:Mapping ;
	bt:targetBase ajan:AgentKnowledge ;
	bt:queryUri [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

CONSTRUCT { _:blankNode <http://www.w3.org/2006/http#requestURI> ?station . }
WHERE {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:worksOn ?station .
}"""^^xsd:string ;
		] .

# -------

:SetFocus
	a bt:Update ;
	rdfs:label "SetFocus?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>

DELETE {
	?running mosim:runningTask ?task .
}
INSERT {
    ?running mosim:runningTask ?newTask .
}
WHERE {
	?running mosim:runningTask ?task .
	?task mosim:step ?step .
	?newTask a mosim:Task .
	?newTask mosim:step ?newStep .

	FILTER (?newStep = ?step+1)
	FILTER (?newTask != ?task)
}"""^^xsd:string ;
	] .

# -------

:ProducePositionGoal
	a bt:GoalProducer ;
	rdfs:label "ProducePositionGoal" ;
	ajan:goal agents:PositionGoal ;
	ajan:bindings [
		a ajan:Bindings ;
		ajan:bindingQuery [
			a bt:SelectQuery ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?part ?tool ?operation
WHERE {
	?focus mosim:runningTask ?task .
	?task rdf:type mosim:Task .
	?task mosim:part ?part .
	?task mosim:tool ?tool .
	?task mosim:operation ?operation .
	#?task mosim:position ?position .
} LIMIT 1"""^^xsd:string ;
	] ] .

# --------------------------------------------
# ------------- PositionBehavior -------------
# --------------------------------------------

# ----------- Endpoint ------------

# localhost:8080/ajan/agents/Agento?capability=example | POST | text/turtle
# Body: "<http://test/Subject> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://test/Object> .
#		 <http://test/Subject> <http://test/predicate> "Hallo!" ."

# ----------- Behavior ------------

:PositionBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "PositionBehavior" ;
	bt:hasChild
		[ a bt:Sequence ;
		  bt:hasChildren (
		  	  :HandlePositionGoal
			  :Idle
			  [ a bt:Priority ;
				  bt:hasChildren (
					:AtObject
					:ProduceWalkToObjectGoal
				  )
			  ]
			  :Idle
			  :SetHands
			  [ a bt:Priority ;
				bt:hasChildren (
					[ a bt:Sequence ;
					  bt:hasChildren (
						:CheckBothHands
						:ReachBothObject
						:CarryBothObject
					  )
					]
					[ a bt:Sequence ;
					  bt:hasChildren (
						:ReachObject
						:CarryObject
					  )
					]
				)
			  ]
		  	  :ProduceWalkToTargetGoal
			  :Idle
			  [ a bt:Priority ;
				 bt:hasChildren (
					[ a bt:Sequence ;
					  bt:hasChildren (
					    :CheckBothHands
						:MoveBothObject
						:ReleaseBothObject
						#:SetNewPosition
					  )
					]
					[ a bt:Sequence ;
					  bt:hasChildren (
					    #:AbortCarry
						:MoveObject
						:ReleaseObject
						:Idle
						#:SetNewPosition
					  )
					]
				)
			  ]
			  :FinishSimulation
		  	  :RemovePositionGoalInput
			  :RemoveInstructionOutputs
		  )
		] .

# ----------- Standard Primitives -----------

:HandlePositionGoal
	a bt:HandleEvent;
	rdfs:label "HandlePositionGoal" ;
	bt:eventContext <http://test/PositionGoal> ;
	bt:validate [
		a bt:ConstructQuery ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX sp: <http://spinrdf.org/sp#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	test:PositionGoalPart rdf:value ?partValue .
	test:PositionGoalTool rdf:value ?toolValue .
	test:PositionGoalOperation rdf:value ?operationValue .
}
WHERE { GRAPH <http://localhost:8090/rdf4j/repositories/agents#PositionGoal> {
	?part sp:varName "part".
	?part rdf:value ?partValue .

	?tool sp:varName "tool".
	?tool rdf:value ?toolValue .

	?operation sp:varName "operation".
	?operation rdf:value ?operationValue .
} }"""^^xsd:string ;
		] .

# -------

:ProduceWalkToObjectGoal
	a bt:GoalProducer ;
	rdfs:label "ProduceWalkToObjectGoal" ;
	ajan:goal agents:WalkGoal ;
	ajan:bindings [
		a ajan:Bindings ;
		ajan:bindingQuery [
			a bt:SelectQuery ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

SELECT ?target
WHERE {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:isLocatedAt ?position .
	test:PositionGoalPart rdf:value ?part .
	?part mosim:type ?partName .

	?target rdf:type mosim:MSceneObject .
	?target rdfs:label ?partName .
} LIMIT 1"""^^xsd:string ;
	] ] .

# -------

:Idle
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "idle()" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:IdleInstruction .

# -------

:AtObject
	a bt:Condition;
	rdfs:label "AtObject" ;
	bt:query [
		a bt:Constraint ;
		a bt:AskQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX test: <http://test/>
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

ASK
WHERE {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:locatedNextTo ?location .
	test:PositionGoalPart rdf:value ?part .
	?part mosim:type ?partName .

	?area mosim:contains ?target .
	?target rdf:type mosim:MSceneObject .
	?target rdfs:label ?partName .

	?area mosim:contains ?targetPOI .
	?targetPOI rdf:type mosim:WalkTarget .
	?targetPOI mosim:id ?id .

	FILTER(?targetPOI = ?location)
}"""^^xsd:string ;
	] .

# -------

:SetHands
	a bt:Update ;
	rdfs:label "SetHands?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX test: <http://test/>
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
DELETE {
	?avatar mosim:hand ?oldhand .
}
INSERT {
	?avatar mosim:hand ?hand .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:hand ?oldhand .

	test:PositionGoalTool rdf:value ?tool .
	?tool mosim:type ?toolName .
	BIND (IF (?toolName="RightHand", "Right", IF (?toolName="LeftHand", "Left", IF (?toolName="BothHands", "BothHands", "NULL"))) as ?hand)
}"""^^xsd:string ;
	] .

# -------

:CheckBothHands
	a bt:Condition;
	rdfs:label "CheckBothHands" ;
	bt:query [
		a bt:Constraint ;
		a bt:AskQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
ASK
WHERE {
	 ?avatar mosim:hand "BothHands" .
}"""^^xsd:string ;
	] .

# -------

:ReachObject
	a bt:Action ;
	rdfs:label "reach(MMU,Object,Hand)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
		PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:hand ?hand .
	?target rdf:type mosim:MSceneObject .
	?target mosim:id ?id .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	test:PositionGoalPart rdf:value ?part .
	?part mosim:type ?partName .

	?avatar mosim:hand ?hand .
	?target rdf:type mosim:MSceneObject .
	?target rdfs:label ?partName .
	?target mosim:id ?id .
	
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:ReachInstruction .

:ReachBothObject
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "reach(Object)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?target mosim:id ?id .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	test:PositionGoalPart rdf:value ?part .
	?part mosim:type ?partName .

	?area mosim:contains ?target .
	?target rdf:type mosim:MSceneObject .
	?target rdfs:label ?partName .
	?target mosim:id ?id .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:ReachBothAction .

# -------

:CarryObject
	a bt:Action ;
	rdfs:label "carry(Object,Hand)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:hand ?hand .
	?target rdf:type mosim:MSceneObject .
	?target mosim:id ?id .
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	test:PositionGoalPart rdf:value ?part .
	?part mosim:type ?partName .

	?avatar mosim:hand ?hand .

	?target rdf:type mosim:MSceneObject .
	?target rdfs:label ?partName .
	?target mosim:id ?id .

	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:CarryInstruction .

:CarryBothObject
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "carry(Object,Hand)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?target mosim:id ?id .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	test:PositionGoalPart rdf:value ?part .
	?part mosim:type ?partName .

	?target rdf:type mosim:MSceneObject .
	?target rdfs:label ?partName .
	?target mosim:id ?id .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:CarryBothAction .

# -------

:ProduceWalkToTargetGoal
	a bt:GoalProducer ;
	rdfs:label "ProduceWalkToTargetGoal" ;
	ajan:goal agents:WalkGoal ;
	ajan:bindings [
		a ajan:Bindings ;
		ajan:bindingQuery [
			a bt:SelectQuery ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

SELECT ?target
WHERE {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:isLocatedAt ?position .
	test:PositionGoalPart rdf:value ?part .
	?part mosim:type ?partName .

	?object rdf:type mosim:MSceneObject .
  	?object rdfs:label ?partName .
	?object mosim:finalLocation ?target .
} LIMIT 1"""^^xsd:string ;
	] ] .

# -------

:MoveObject
	a bt:Action ;
	rdfs:label "move(Object,Subject,Hand)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:hand ?hand .
	?subject rdf:type mosim:FinalLocation .
	?subject mosim:id ?subID .
	?object rdf:type mosim:MSceneObject .
	?object mosim:id ?partID .
	
	?instruction rdf:type mosim:Instruction .
	?instruction mosim:actionID ?instID . 
	
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	test:PositionGoalPart rdf:value ?part .
	?part mosim:type ?partName .

	?object rdf:type mosim:MSceneObject .
  	?object rdfs:label ?partName .
	?object mosim:id ?partID .
	?object mosim:finalLocation ?subject .

	?subject rdf:type mosim:MSceneObject .
	?subject mosim:id ?subID .

  	?avatar mosim:hand ?hand .
	
	?instruction rdf:type mosim:Instruction .
	?instruction mosim:actionID ?instID .
	?instruction mosim:mmu "Object/Carry" .

	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:MoveInstruction .

:MoveBothObject
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "move(Object,Subject)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?subject rdf:type mosim:FinalLocation .
	?subject mosim:id ?subID .
	?object rdf:type mosim:MSceneObject .
	?object mosim:id ?partID .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	test:PositionGoalPart rdf:value ?part .
	?part mosim:type ?partName .

	?object rdf:type mosim:MSceneObject .
  	?object rdfs:label ?partName .
	?object mosim:id ?partID .
	?object mosim:finalLocation ?subject.

	?subject rdf:type mosim:FinalLocation .
	?subject mosim:id ?subID .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:MoveBothAction .

# -------

:ReleaseObject
	a bt:Action ;
	rdfs:label "release(Object,Hand)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:hand ?hand .
		
	#?instruction rdf:type mosim:Instruction .
	#?instruction mosim:actionID ?instID . 
	
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:hand ?hand .
	
	#?instruction rdf:type mosim:Instruction .
	#?instruction mosim:actionID ?instID .
	#?instruction mosim:mmu "Object/Carry" .
	
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:ReleaseInstruction .

:ReleaseBothObject
	a bt:Action ;
	bt:evaluate false ;
	rdfs:label "release(Object)" ;
	bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

CONSTRUCT {
	?avatar rdf:type mosim:Avatar .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
}"""^^xsd:string ;
		]
	) ;
	bt:definition services:ReleaseBothAction .

# -------

:SetNewPosition
	a bt:Update ;
	rdfs:label "SetNewPosition?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX test: <http://test/>
PREFIX mosim: <http://www.dfki.de/mosim-ns#>

DELETE {
	?target mosim:isLocatedAt ?old .
}
INSERT {
	?target mosim:isLocatedAt ?finalPos .
}
WHERE {
	test:PositionGoalPart rdf:value ?part .
	?part mosim:type ?partName .

	?target rdf:type mosim:MSceneObject .
	?target rdfs:label ?partName .
	?target mosim:finalLocation ?finalPos .
	?target mosim:isLocatedAt ?old .
}"""^^xsd:string ;
	] .

# -------

:FinishSimulation
	a bt-mosim:AbortInstruction ;
	rdfs:label "AbortInstruction" ;
	bt-mosim:host [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?host ?port 
WHERE {
	?cosim rdf:type mosim:CoSimulator .
	?cosim mosim:host ?host .
	?cosim mosim:port ?port .
}"""^^xsd:string ;
	] ;
	bt-mosim:instructionID [
		  a bt:SelectQuery ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?id 
WHERE {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:instruction ?instruction .
	?instruction mosim:mmu "test" .
	?instruction mosim:actionID ?id .
}"""^^xsd:string ;
	] .

:RemoveEvaluateResult
	a bt:Update ;
	rdfs:label "RemoveEvaluateResult?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
CLEAR GRAPH <http://evaluate/1>
"""^^xsd:string ;
	] .

:RemoveGoalInput
	a bt:Update ;
	rdfs:label "RemoveGoalInput?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX test: <http://test/>

DELETE {
	test:GoalTool ?p ?o .
	test:GoalPart ?x ?y .
	test:GoalOperation ?w ?z .
}
WHERE {
	test:GoalTool ?p ?o .
	test:GoalPart ?x ?y .
	test:GoalOperation ?w ?z .
}"""^^xsd:string ;
	] .

:RemovePositionGoalInput
	a bt:Update ;
	rdfs:label "RemovePositionGoalInput?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX test: <http://test/>

DELETE {
	test:PositionGoalTool ?p ?o .
	test:PositionGoalPart ?x ?y .
	test:PositionGoalOperation ?w ?z .
}
WHERE {
	test:PositionGoalTool ?p ?o .
	test:PositionGoalPart ?x ?y .
	test:PositionGoalOperation ?w ?z .
}"""^^xsd:string ;
	] .

:RemoveInstructionOutputs
	a bt:Update ;
	rdfs:label "RemoveInstructionOutputs?!" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
PREFIX mosim: <http://www.dfki.de/mosim-ns#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX test: <http://test/>

DELETE {
	?avatar mosim:instruction ?instruction .
    ?instruction rdf:type mosim:Instruction .
    ?instruction mosim:mmu ?mmu .
    ?instruction mosim:actionID ?id .
}
WHERE {
	?avatar rdf:type mosim:Avatar .
	?avatar mosim:instruction ?instruction .
    ?instruction rdf:type mosim:Instruction .
    ?instruction mosim:mmu ?mmu .
    ?instruction mosim:actionID ?id .
}"""^^xsd:string ;
	] .
<?xml version="1.0"?>
<ruleset name="Custom ruleset"
		 xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

	<description>
		Ruleset used in sda/rsp
		<!-- See the FAQ here: http://maven.apache.org/maven-1.x/plugins/pmd/faq.html -->
		<!-- See the rule sets here: http://pmd.sourceforge.net/ (menu on the left has a Rule Sets section -->
		<!-- For further details of how to configure things, look here: http://pmd.sourceforge.net/pmd-5.1.0/howtomakearuleset.html -->
	</description>

	<!-- As long as we are not using Android there is no need to switch this on -->
	<!-- <rule ref="rulesets/java/android.xml"/> -->

	<rule ref="rulesets/java/basic.xml"/>
	<rule ref="rulesets/java/braces.xml"/>
	<rule ref="rulesets/java/clone.xml"/>

	<rule ref="rulesets/java/codesize.xml/CyclomaticComplexity">
		<properties>
			<property name="reportLevel" value="8"/>
		</properties>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessiveClassLength">
		<properties>
			<!-- = NcssTypeCount + commentary -->
			<property name="minimum" value="450"/>
		</properties>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength">
		<properties>
			<!-- = NcssMethodCount + commentary -->
			<property name="minimum" value="32"/>
		</properties>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessiveParameterList">
		<properties>
			<!-- Clean Code -->
			<property name="minimum" value="4"/>
		</properties>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessivePublicCount">
		<properties>
			<!-- 5 member with getter and setter +  10 semantic functions + buffer -->
			<property name="minimum" value="25"/>
		</properties>
	</rule>
	<rule ref="rulesets/java/codesize.xml/NcssConstructorCount">
		<properties>
			<!-- Weld proxy always ctor, keep things small -->
			<property name="minimum" value="7"/>
		</properties>
	</rule>
	<rule ref="rulesets/java/codesize.xml/NcssMethodCount">
		<properties>
			<property name="minimum" value="23"/>
		</properties>
	</rule>
	<rule ref="rulesets/java/codesize.xml/NcssTypeCount">
		<properties>
			<property name="minimum" value="400"/>
		</properties>
	</rule>
	<rule ref="rulesets/java/codesize.xml/NPathComplexity">
		<properties>
			<property name="minimum" value="200"/>
		</properties>
	</rule>
	<rule ref="rulesets/java/codesize.xml/TooManyFields">
		<properties>
			<property name="maxfields" value="12"/>
		</properties>
	</rule>
	<rule ref="rulesets/java/codesize.xml/TooManyMethods">
		<properties>
			<property name="maxmethods" value="42"/>
		</properties>
	</rule>

	<rule ref="rulesets/java/comments.xml">
		<exclude name="CommentRequired"/>
	</rule>
	<rule ref="rulesets/java/comments.xml/CommentSize">
		<properties>
			<property name="maxLineLength" value="160" />
			<property name="maxLines" value="16" />
		</properties>
	</rule>

	<rule ref="rulesets/java/controversial.xml">
		<exclude name="AtLeastOneConstructor" />
		<exclude name="AvoidLiteralsInIfCondition" />
		<exclude name="CallSuperInConstructor" />
		<exclude name="DataflowAnomalyAnalysis" />
		<exclude name="OnlyOneReturn" />
	</rule>

	<rule ref="rulesets/java/coupling.xml">
		<exclude name="LawOfDemeter" />
		<!-- LoosePackageCoupling rule is broken ... -->
		<exclude name="LoosePackageCoupling" />
	</rule>

	<rule ref="rulesets/java/design.xml">
		<exclude name="UseLocaleWithCaseConversions" />
		<exclude name="SingularField" />
		<!-- causes false positives with Jena: -->
		<exclude name="CloseResource" />
	</rule>

	<rule ref="rulesets/java/design.xml/SingularField">
		<properties>
			<!-- ignore lombok-generated -->
			<property name="violationSuppressXPath"
					  value="//FieldDeclaration[ancestor::*/Annotation/MarkerAnnotation[(Name/@Image='Data') or (Name/@Image='Getter') or (Name/@Image='Setter')]]" />
		</properties>
	</rule>

	<rule ref="rulesets/java/empty.xml"/>
	<rule ref="rulesets/java/finalizers.xml"/>
	<rule ref="rulesets/java/imports.xml"/>

	<!-- As long as we are not using JUnit there is no need to switch this on -->
	<!-- <rule ref="rulesets/java/junit.xml"/> -->

	<rule ref="rulesets/java/logging-java.xml">
		<!-- Will throw errors if the logger gets injected. Injected loggers must not be static final... -->
		<exclude name="LoggerIsNotStaticFinal"/>
	</rule>

	<rule ref="rulesets/java/migrating.xml"/>

	<rule ref="rulesets/java/naming.xml">
		<exclude name="GenericsNaming"/>
		<exclude name="LongVariable"/>
		<exclude name="ShortVariable"/>
	</rule>

	<rule ref="rulesets/java/optimizations.xml">
		<exclude name="LocalVariableCouldBeFinal"/>
	</rule>

	<rule ref="rulesets/java/strictexception.xml"/>

	<rule ref="rulesets/java/strings.xml">
		<!-- results in unreadable code ... -->
		<exclude name="ConsecutiveAppendsShouldReuse"/>
	</rule>

	<rule ref="rulesets/java/sunsecure.xml"/>
	<rule ref="rulesets/java/typeresolution.xml"/>
	<rule ref="rulesets/java/unnecessary.xml"/>

	<rule ref="rulesets/java/unusedcode.xml">
		<exclude name="UnusedPrivateField" />
	</rule>
	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField">
		<properties>
			<!-- ignore lombok-generated -->
			<property name="violationSuppressXPath"
					  value="//FieldDeclaration[ancestor::*/Annotation/MarkerAnnotation[(Name/@Image='Data') or (Name/@Image='Getter') or (Name/@Image='Setter')]]" />
		</properties>
	</rule>
</ruleset>

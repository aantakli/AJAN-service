name: docker-build-and-publish

on:
  push:
    branches:
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
      - 
        name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - 
        name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.3.9
      - 
        name: Build project with Maven
        run: mvn install
      - 
        name: Temporally save triplestore jar
        uses: actions/upload-artifact@v3
        with:
          name: triplestore
          path: ./triplestore/target/triplestore-0.1-war-exec.jar
      - 
        name: Temporally save executionservice jar
        uses: actions/upload-artifact@v3
        with:
          name: executionservice
          path: ./executionservice/target/executionservice-0.1.jar  
  docker:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      -
        uses: actions/checkout@v2
      -
        name: Setup docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: aantakli/ajan-service
          tags: |
            type=raw,latest
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Load triplestore jar
        uses: actions/download-artifact@v3
        with:
          name: triplestore
          path: .
      -
        name: Load executionservice jar
        uses: actions/download-artifact@v3
        with:
          name: executionservice
          path: .
      - run: ls .
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GIT_TOKEN }}
